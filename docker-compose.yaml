version: "3"

services:
  ####################### MAD GOAT SERVICES ###########################

  #####################################################################
  # Keycloak
  db-keycloak-service:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./envs/.env.keycloak
    ports:
      - 5432:5432
    networks:
      - mad-network

  keycloak-service:
    container_name: keycloak
    command: start-dev
    build: ./keycloak
    env_file:
      - ./envs/.env.keycloak
    ports:
      - 8080:8080
    depends_on:
      - db-keycloak-service
    networks:
      - mad-network

  #####################################################################
  # Traefik
  traefik-reverse-proxy:
    image: traefik:2.10.1
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8082:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  #####################################################################
  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - mad-network
  #####################################################################
  # Web App
  webapp:
    image: ghcr.io/mad-goat-project/mad-web-app:main
    env_file:
      - ./envs/.env.webapp
    ports:
      - 3000:80
    networks:
      - mad-network
  #####################################################################
  # Lesson Service
  lesson-service:
    image: ghcr.io/mad-goat-project/mad-lessons-service:main
    ports:
      - "3001:3000"
    env_file:
      - ./envs/.env.lesson
      - ./envs/.env.keycloak.secrets
    depends_on:
      - db-lesson-service
    networks:
      - mad-network

  db-lesson-service:
    image: postgres:14.1-alpine
    restart: always
    env_file:
      - ./envs/.env.lesson
    ports:
      - "5433:5432"
    volumes:
      - ./data/db-lesson-service:/var/lib/postgresql/data
    networks:
      - mad-network

  #####################################################################
  # Category: Open Source Software
  # Lesson: Inconsistent Security Standards

  #Safe Service
  mad4shell-service-safe:
    image: ghcr.io/mad-goat-project/mad-goat4shell-service:safe
    ports:
      - "3002:8080"
    networks:
      - mad-network
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"

  #Unsafe Service
  mad4shell-service-unsafe:
    image: ghcr.io/mad-goat-project/mad-goat4shell-service:unsafe
    ports:
      - "3003:8080"
    networks:
      - mad-network
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"

  #####################################################################
  # Category: Open Source Software
  # Lesson: Unknown Source Code Origins

  scoreboard-service:
    image: ghcr.io/mad-goat-project/mad-scoreboard-service:main
    restart: always
    env_file:
      - ./envs/.env.scoreboard
      - ./envs/.env.keycloak.secrets
    ports:
      - "3004:3000"
    depends_on:
      - db-scoreboard-service
    networks:
      - mad-network
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"

  db-scoreboard-service:
    container_name: db-scoreboard-service
    image: mongo:6.0
    ports:
      - 27017:27017
    volumes:
      - ./data/db-scoreboard-service:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    networks:
      - mad-network

##  #####################################################################
##  ## Observability Services
##
##  prometheus:
##    image: prom/prometheus
##    restart: always
##    volumes:
##      - ./observability/prometheus:/etc/prometheus/
##      - prometheus_data:/prometheus
##    command:
##      - "--config.file=/etc/prometheus/prometheus.yml"
##      - "--storage.tsdb.path=/prometheus"
##      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
##      - "--web.console.templates=/usr/share/prometheus/consoles"
##    ports:
##      - 9090:9090
##    links:
##      - cadvisor:cadvisor
##      - alertmanager:alertmanager
##    depends_on:
##      - cadvisor
##
##  node-exporter:
##    image: prom/node-exporter
##    volumes:
##      - /proc:/host/proc:ro
##      - /sys:/host/sys:ro
##      - /:/rootfs:ro
##    command:
##      - "--path.procfs=/host/proc"
##      - "--path.sysfs=/host/sys"
##      - --collector.filesystem.ignored-mount-points
##      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
##    ports:
##      - 9100:9100
##    restart: always
##    deploy:
##      mode: global
##
##  alertmanager:
##    image: prom/alertmanager
##    restart: always
##    ports:
##      - 9093:9093
##    volumes:
##      - ./observability/alertmanager/:/etc/alertmanager/
##    command:
##      - "--config.file=/etc/alertmanager/config.yml"
##      - "--storage.path=/alertmanager"
##
##  cadvisor:
##    image: gcr.io/cadvisor/cadvisor:v0.47.1 # m1/m2 mac
##    platform: linux/aarch64 # m1/m2 mac
##    volumes:
##      - /:/rootfs:ro
##      - /var/run:/var/run:rw
##      - /sys:/sys:ro
##      - /var/lib/docker/:/var/lib/docker:ro
##      - /var/run/docker.sock:/var/run/docker.sock:rw
##
##      - /dev/disk/:/dev/disk:ro
##    ports:
##      - 8081:8080
##    restart: always
##    deploy:
##      mode: global
##
##  grafana:
##    image: grafana/grafana
##    user: "472"
##    restart: always
##    environment:
##      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
##    volumes:
##      - grafana_data:/var/lib/grafana
##      - ./observability/grafana/provisioning/:/etc/grafana/provisioning/
##    env_file:
##      - ./observability/grafana/config.monitoring
##    ports:
##      - 3010:3000
##    depends_on:
##      - prometheus

# Configurations
volumes:
  postgres_data:
    driver: local
  prometheus_data: {}
  grafana_data: {}

networks:
  mad-network:
    name: mad-network
