apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    traefik.enable: "true"
    traefik.http.routers.rabbitmq-service.entrypoints: web
    traefik.http.routers.rabbitmq-service.rule: Host(`rabbitmq.mad.localhost`)
    traefik.http.services.rabbitmq-service.loadbalancer.server.port: "15672"
  creationTimestamp: null
  labels:
    io.mad.service: rabbitmq
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      io.mad.service: rabbitmq
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.24.0 (4a2a0458)
        traefik.enable: "true"
        traefik.http.routers.rabbitmq-service.entrypoints: web
        traefik.http.routers.rabbitmq-service.rule: Host(`rabbitmq.mad.localhost`)
        traefik.http.services.rabbitmq-service.loadbalancer.server.port: "15672"
      creationTimestamp: null
      labels:
        io.mad.network/mad-network: "true"
        io.mad.service: rabbitmq
    spec:
      containers:
        - image: rabbitmq:3-management-alpine
          name: rabbitmq
          ports:
            - containerPort: 5672
            - containerPort: 15672
          resources:
            limits:
              cpu: 500m
              memory: "536870912"
            requests:
              cpu: 250m
              memory: "268435456"
          volumeMounts:
            - mountPath: /var/lib/rabbitmq/
              name: rabbitmq-claim0
            - mountPath: /var/log/rabbitmq
              name: rabbitmq-claim1
      restartPolicy: Always
      volumes:
        - name: rabbitmq-claim0
          persistentVolumeClaim:
            claimName: rabbitmq-claim0
        - name: rabbitmq-claim1
          persistentVolumeClaim:
            claimName: rabbitmq-claim1
status: {}
