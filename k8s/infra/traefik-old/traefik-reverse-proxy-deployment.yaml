apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    traefik.enable: "true"
    traefik.http.routers.traefik-service.entrypoints: web
    traefik.http.routers.traefik-service.rule: Host(`traefik.mad.localhost`)
    traefik.http.services.traefik-service.loadbalancer.server.port: "8080"
  creationTimestamp: null
  labels:
    io.mad.service: traefik-reverse-proxy
  name: traefik-reverse-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      io.mad.service: traefik-reverse-proxy
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.24.0 (4a2a0458)
        traefik.enable: "true"
        traefik.http.routers.traefik-service.entrypoints: web
        traefik.http.routers.traefik-service.rule: Host(`traefik.mad.localhost`)
        traefik.http.services.traefik-service.loadbalancer.server.port: "8080"
      creationTimestamp: null
      labels:
        io.mad.network/mad-network: "true"
        io.mad.service: traefik-reverse-proxy
    spec:
      containers:
        - args:
            - --log.level=DEBUG
            - --api.insecure=true
            - --providers.docker=true
            - --providers.docker.exposedbydefault=false
            - --entrypoints.web.address=:80
          image: traefik:2.10.3
          name: mad-traefik-service
          ports:
            - containerPort: 80
            - containerPort: 8080
          resources:
            limits:
              cpu: 500m
              memory: "536870912"
            requests:
              cpu: 250m
              memory: "268435456"
          volumeMounts:
            - mountPath: /var/run/docker.sock
              name: traefik-reverse-proxy-claim0
      restartPolicy: Always
      volumes:
        - name: traefik-reverse-proxy-claim0
          persistentVolumeClaim:
            claimName: traefik-reverse-proxy-claim0
status: {}
