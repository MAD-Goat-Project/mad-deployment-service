version: "3"
services:
  # Keycloak
  db-keycloak-service:
    image: postgres:15.3-alpine
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    volumes:
      - ./data/db-keycloak-service:/var/lib/postgresql/data
    env_file:
      - ./envs/.env.keycloak
    ports:
      - 5432:5432
    networks:
      - mad-network

  keycloak-service:
    image: ghcr.io/mad-goat-project/keycloak:main
    container_name: mad-keycloak-service
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    command: start-dev
    env_file:
      - ./envs/.env.keycloak
    ports:
      - 8080:8080
    depends_on:
      - db-keycloak-service
    networks:
      mad-network:
        aliases:
          - keycloak.mad.localhost
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak-service.rule=Host(`keycloak.mad.localhost`) && PathPrefix(`/`) && (Method(`GET`) || Method(`POST`))"
      - "traefik.http.routers.keycloak-service.entrypoints=web"
      - "traefik.http.services.keycloak-service.loadbalancer.server.port=8080"

  #####################################################################
  # Traefik
  traefik-reverse-proxy:
    image: traefik:2.10.3
    container_name: mad-traefik-service
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8082:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - mad-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-service.rule=Host(`traefik.mad.localhost`)"
      - "traefik.http.routers.traefik-service.entrypoints=web"
      - "traefik.http.services.traefik-service.loadbalancer.server.port=8080"

  #####################################################################
  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management-alpine
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - mad-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rabbitmq-service.rule=Host(`rabbitmq.mad.localhost`)"
      - "traefik.http.routers.rabbitmq-service.entrypoints=web"
      - "traefik.http.services.rabbitmq-service.loadbalancer.server.port=15672"

  #######################################################################
  #### Jekyll Documentation Service

  jekyll-service:
    image: ghcr.io/mad-goat-project/mad-goat-docs:main
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    restart: always
    ports:
      - "4000:80"
    networks:
      - mad-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jekyll-service.rule=Host(`docs.mad.localhost`)"
      - "traefik.http.routers.jekyll-service.entrypoints=web"
      - "traefik.http.services.jekyll-service.loadbalancer.server.port=80"
